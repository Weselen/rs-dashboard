{"ast":null,"code":"var _jsxFileName = \"/Users/kristadayton/Dev/Projects/dwelladata-dashboard/dwelladata-dashboard/src/components/MapView.js\";\nimport React from 'react';\nimport '../styles/MapView.css';\nimport '../styles/Leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport neighborhoods from '../data/vancouver-neighborhoods.geojson'; // Load GeoJSON\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow\n});\nfunction MapView() {\n  const position = [49.2827, -123.1207]; // Vancouver coordinates\n\n  // style each xone(gray fill, white border )\n  const style = {\n    fillColor: \"#90e0ef\",\n    weight: 1,\n    opacity: 0.5,\n    color: \"#0077b6\"\n  };\n\n  // Handler for each zone\n  const onEachFeature = (feature, layer) => {\n    const zonename = feature.properties.name;\n    layer.on({\n      click: () => {\n        onZoneClick(zonename);\n      },\n      mouseover: e => {\n        e.target.setStyle({\n          fillOpacity: 0.8\n        });\n      },\n      mouseout: e => {\n        e.target;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-view\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: position,\n        zoom: 12,\n        style: {\n          height: '100%',\n          width: '100%',\n          borderRadius: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: neighborhoods,\n          style: geoStyle,\n          onEachFeature: onEachFeature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Center Marker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n  };\n}\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","GeoJSON","neighborhoods","L","markerIcon2x","markerIcon","markerShadow","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapView","position","style","fillColor","weight","opacity","color","onEachFeature","feature","layer","zonename","properties","name","on","click","onZoneClick","mouseover","e","target","setStyle","fillOpacity","mouseout","className","children","center","zoom","height","width","borderRadius","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","data","geoStyle","_c","$RefreshReg$"],"sources":["/Users/kristadayton/Dev/Projects/dwelladata-dashboard/dwelladata-dashboard/src/components/MapView.js"],"sourcesContent":["import React from 'react';\nimport '../styles/MapView.css';\nimport '../styles/Leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport neighborhoods from '../data/vancouver-neighborhoods.geojson'; // Load GeoJSON\nimport L from 'leaflet';\nimport markerIcon2x from 'leaflet/dist/images/marker-icon-2x.png';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow,\n});\n\nfunction MapView() {\n  const position = [49.2827, -123.1207]; // Vancouver coordinates\n\n  // style each xone(gray fill, white border )\n   const style = {\n    fillColor: \"#90e0ef\",\n    weight: 1,\n    opacity: 0.5,\n    color: \"#0077b6\"\n   };\n\n   // Handler for each zone\n   const onEachFeature = (feature, layer) => {\n    const zonename = feature.properties.name;\n\n    layer.on({\n      click: () => {\n        onZoneClick(zonename);\n      },\n      mouseover: (e) => {\n        e.target.setStyle({ fillOpacity: 0.8 });\n      },\n      mouseout: (e) => {\n        e.target\n      }\n    });\n\n\n\n  return (\n    <div className=\"map-view\">\n     <MapContainer center={position} zoom={12} style={{ height: '100%', width: '100%', borderRadius: '12px' }}>\n       <TileLayer\n         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n         attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n       />\n      \n      <GeoJSON data={neighborhoods} style={geoStyle} onEachFeature={onEachFeature} />\n      <Marker position={position}>\n        <Popup>Center Marker</Popup>\n      </Marker>\n      </MapContainer>\n    </div>\n  );\n}\n}\n\nexport default MapView;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAC9B,OAAO,uBAAuB;AAC9B,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,QAAQ,eAAe;AAC/E,OAAOC,aAAa,MAAM,yCAAyC,CAAC,CAAC;AACrE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,YAAY,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,OAAOL,CAAC,CAACM,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CT,CAAC,CAACM,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEV,YAAY;EAC3BW,OAAO,EAAEV,UAAU;EACnBW,SAAS,EAAEV;AACb,CAAC,CAAC;AAEF,SAASW,OAAOA,CAAA,EAAG;EACjB,MAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAEvC;EACC,MAAMC,KAAK,GAAG;IACbC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,GAAG;IACZC,KAAK,EAAE;EACR,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACzC,MAAMC,QAAQ,GAAGF,OAAO,CAACG,UAAU,CAACC,IAAI;IAExCH,KAAK,CAACI,EAAE,CAAC;MACPC,KAAK,EAAEA,CAAA,KAAM;QACXC,WAAW,CAACL,QAAQ,CAAC;MACvB,CAAC;MACDM,SAAS,EAAGC,CAAC,IAAK;QAChBA,CAAC,CAACC,MAAM,CAACC,QAAQ,CAAC;UAAEC,WAAW,EAAE;QAAI,CAAC,CAAC;MACzC,CAAC;MACDC,QAAQ,EAAGJ,CAAC,IAAK;QACfA,CAAC,CAACC,MAAM;MACV;IACF,CAAC,CAAC;IAIJ,oBACE3B,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxBhC,OAAA,CAACX,YAAY;QAAC4C,MAAM,EAAEvB,QAAS;QAACwB,IAAI,EAAE,EAAG;QAACvB,KAAK,EAAE;UAAEwB,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAL,QAAA,gBACvGhC,OAAA,CAACV,SAAS;UACRgD,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAyF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eAEH3C,OAAA,CAACP,OAAO;UAACmD,IAAI,EAAElD,aAAc;UAACiB,KAAK,EAAEkC,QAAS;UAAC7B,aAAa,EAAEA;QAAc;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/E3C,OAAA,CAACT,MAAM;UAACmB,QAAQ,EAAEA,QAAS;UAAAsB,QAAA,eACzBhC,OAAA,CAACR,KAAK;YAAAwC,QAAA,EAAC;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAEV,CAAC;AACD;AAACG,EAAA,GA7CQrC,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}